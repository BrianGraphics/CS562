#version 460

layout (local_size_x = 1, local_size_y = 128, local_size_z = 1) in;
uniform uint w;
uniform blurKernel { float weights[101]; };

layout (rgba32f) uniform readonly  image2D src;
layout (rgba32f) uniform writeonly image2D dst;

shared vec4 h[128+101]; // Variable shared with other threads in the 128x1 thread group

void main()
{
  ivec2 gpos = ivec2(gl_GlobalInvocationID.xy); // Combo of groupID, groupSize and localID
  uint i = gl_LocalInvocationID.y; // Local thread id in the 128x1 thread groups128x1
  h[i] = imageLoad(src, gpos + ivec2(0, -w)); // read an image pixel at an ivec2(.,.) position
  if (i<2*w) h[i+128] = imageLoad(src, gpos + ivec2(0, 128 - w)); // read extra 2*w pixels
  barrier();
  
  vec4 sum = vec4(0.0);
  for(uint index = i; index <= i + 2*w; index++) {
    sum += weights[index - i] * h[index];
  }
  
  vec4 result = sum;//vec4(sum, sum*sum, sum*sum*sum, sum*sum*sum*sum);
  imageStore(dst, gpos, result); // Write to destination imag         
}
